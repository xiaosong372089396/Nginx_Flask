公司私有云目前五台节点

一：网络：
 1.管理网络：192.168.10.0/24
 2.数据网络：1.1.1.0/24

二：操作系统：CentOS Linux release 7.2.1511 (Core)

三：内核：3.10.0-327.el7.x86_64

四：openstack版本mitaka


五：五台节点
	
	控制节点(controller)   192.168.10.11
	网络节点(network)      192.168.10.12
	计算节点(compute01)    192.168.10.13
	计算节点(compute02)    192.168.10.14
	计算节点(compute03)    192.168.10.15

配置基本环境：

	控制节点（192.168.10.11）:
		#生成秘钥
		ssh-keygen
		#推送到网络节点和计算节点
		ssh-copy-id 192.168.10.12
		ssh-copy-id 192.168.10.13
		ssh-copy-id 192.168.10.14
		ssh-copy-id 192.168.10.15
		
	控制节点（192.168.10.11）:	
	#修改hosts文件
	127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
	::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
	192.168.10.11 conroller
	192.168.10.12 network
	192.168.10.13 compute01
	192.168.10.14 compute02
	192.168.10.15 compute03
	
	#推送到网络节点和计算节点
	scp /etc/hosts 192.168.10.12:/etc/hosts
	scp /etc/hosts 192.168.10.13:/etc/hosts
	scp /etc/hosts 192.168.10.14:/etc/hosts
	scp /etc/hosts 192.168.10.15:/etc/hosts

	
	

每台机器配置本地yum源（五台机器一样的步骤）

1.把包传到mnt下

	mkdir /mnt/mitaka
	#上传需要的包
	mv openstack-mitaka-rpms.tar.gz /mnt/mitaka/
	cd /mnt/mitaka/
	tar xf openstack-mitaka-rpms.tar.gz 
	ll /mnt/mitaka/mitaka-rpms/
	
2.配置yum
# cat /etc/yum.repos.d/mitaka.repo 
[mitaka]
name=mitaka repo
baseurl=file:///mnt/mitaka/mitaka-rpms/
enabled=1
gpgcheck=0

3.每台机器
yum makecache && yum install vim net-tools -y&& yum update -y



4.时间服务部署

所有节点：
yum install chrony -y
控制节点：
修改配置：
/etc/chrony.conf
allow 管理网络网段ip/24

其余节点：
修改配置：
/etc/chrony.conf
server 控制节点ip iburst
server 192.168.10.11 iburst


启服务
systemctl enable chronyd.service
systemctl start chronyd.service

验证：
每台机器执行：
chronyc sources
在S那一列包含*号，代表同步成功（可能需要花费几分钟去同步，时间务必同步）


二：获取软件包
如果使用自定义源，那么下列centos和redhat的操作可以省略
#在所有节点执行
centos：
yum install yum-plugin-priorities -y #防止自动更新

#在所有节点执行
yum upgrade

yum install python-openstackclient -y
yum install openstack-selinux -y



三：部署mariadb数据库
控制节点：
yum install mariadb mariadb-server python2-PyMySQL -y

编辑：
/etc/my.cnf.d/openstack.cnf

[mysqld]
bind-address = 控制节点管理网络ip
default-storage-engine = innodb
innodb_file_per_table
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8

启服务：
systemctl enable mariadb.service
systemctl start mariadb.service
mysql_secure_installation


# mysql_secure_installation

NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] n
 ... skipping.

By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] n
 ... skipping.

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] n
 ... skipping.

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] y
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] y
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!

[root@localhost ~]# 
[root@localhost ~]# mysql
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 6
Server version: 10.1.12-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> 
MariaDB [(none)]> exit
Bye




四：为Telemetry 服务部署MongoDB
控制节点：
yum install mongodb-server mongodb -y

编辑：/etc/mongod.conf
bind_ip = 控制节点管理网络ip
smallfiles = true

启动服务：
systemctl enable mongod.service
systemctl start mongod.service


五：部署消息队列rabbitmq(验证方式:http://192.168.10.11:15672/ 用户:guest 密码:guest)
控制节点：
yum install rabbitmq-server -y

启动服务：
systemctl enable rabbitmq-server.service
systemctl start rabbitmq-server.service

新建rabbitmq用户密码：
rabbitmqctl add_user openstack xianlai

为新建的用户openstack设定权限：
rabbitmqctl set_permissions openstack ".*" ".*" ".*"

部署web控制台
rabbitmq-plugins enable rabbitmq_management 
service rabbitmq-server restart

六：部署memcached缓存（为keystone服务缓存tokens）
控制节点：
yum install memcached python-memcached -y

启动服务：
systemctl enable memcached.service
systemctl start memcached.service



认证服务keystone部署
控制节点：
一：安装和配置服务
1.建库建用户
mysql -u root -p
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'xianlaikeystone';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'xianlaikeystone';
flush privileges;
 
2.yum install openstack-keystone httpd mod_wsgi -y

3.编辑/etc/keystone/keystone.conf

# openssl rand -hex 10
0007bf42d6de849057c6


[DEFAULT]
admin_token = 0007bf42d6de849057c6  #建议用命令制作token:openssl rand -hex 10

[database]
connection = mysql+pymysql://keystone:xianlaikeystone@controller/keystone

[token]
provider = fernet


4.同步修改到数据库
su -s /bin/sh -c "keystone-manage db_sync" keystone

5.初始化fernet keys
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

6.配置apache服务
编辑：/etc/httpd/conf/httpd.conf
ServerName controller01

编辑：/etc/httpd/conf.d/wsgi-keystone.conf
新增配置
Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

7.启动服务:
systemctl enable httpd.service
systemctl start httpd.service

二：创建服务实体和访问端点

1.实现配置管理员环境变量，用于获取后面创建的权限
export OS_TOKEN=0007bf42d6de849057c6
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3


2.基于上一步给的权限，创建认证服务实体（目录服务）
openstack service create \
  --name keystone --description "OpenStack Identity" identity
  +-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Identity               |
| enabled     | True                             |
| id          | 8ad1d1c9054341f08ed4a4a626b940bf |
| name        | keystone                         |
| type        | identity                         |
+-------------+----------------------------------+


3.基于上一步建立的服务实体，创建访问该实体的三个api端点

openstack endpoint create --region RegionOne \
  identity public http://controller:5000/v3
  +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 78bd01e2e09644c5b82a649824d5ad7f |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 8ad1d1c9054341f08ed4a4a626b940bf |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:5000/v3        |
+--------------+----------------------------------+


  
openstack endpoint create --region RegionOne \
  identity internal http://controller:5000/v3
  
  +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | c6621bbd4613415786311ea983379ca5 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 8ad1d1c9054341f08ed4a4a626b940bf |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:5000/v3        |
+--------------+----------------------------------+



  
openstack endpoint create --region RegionOne \
  identity admin http://controller:35357/v3
  +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 97eff741adbe47589d26096ad7dac198 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 8ad1d1c9054341f08ed4a4a626b940bf |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:35357/v3       |
+--------------+----------------------------------+

  
三：创建域，租户，用户，角色，把四个元素关联到一起
建立一个公共的域名：
openstack domain create --description "Default Domain" default
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Default Domain                   |
| enabled     | True                             |
| id          | dcf404538c064ac383c291187f54d331 |
| name        | default                          |
+-------------+----------------------------------+
管理员：admin
openstack project create --domain default \
  --description "Admin Project" admin

  +-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Admin Project                    |
| domain_id   | dcf404538c064ac383c291187f54d331 |
| enabled     | True                             |
| id          | 3fd4297d0b35454caa4e156c7a1ee3fd |
| is_domain   | False                            |
| name        | admin                            |
| parent_id   | dcf404538c064ac383c291187f54d331 |
+-------------+----------------------------------+



openstack user create --domain default \
  --password-prompt admin

User Password: xianlai
Repeat User Password: xianlai
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | dcf404538c064ac383c291187f54d331 |
| enabled   | True                             |
| id        | 42fbd360829340009528b205358135c4 |
| name      | admin                            |
+-----------+----------------------------------+

  
openstack role create admin
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | None                             |
| id        | dc11df606caa4206948987b6a754593e |
| name      | admin                            |
+-----------+----------------------------------+


openstack role add --project admin --user admin admin

普通用户：demo
openstack project create --domain default \
  --description "Demo Project" demo
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Demo Project                     |
| domain_id   | dcf404538c064ac383c291187f54d331 |
| enabled     | True                             |
| id          | c7c76e50460d461e933ee42b3c6004ca |
| is_domain   | False                            |
| name        | demo                             |
| parent_id   | dcf404538c064ac383c291187f54d331 |
+-------------+----------------------------------+
  
  
openstack user create --domain default \
  --password-prompt demo
 User Password:xianlai
Repeat User Password:xianlai
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | dcf404538c064ac383c291187f54d331 |
| enabled   | True                             |
| id        | 416aeb0e7b744df28d9556c27226c492 |
| name      | demo                             |
+-----------+----------------------------------+

openstack role create user

+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | None                             |
| id        | 8015bbd04b8c4f6193f6f83d2a500450 |
| name      | user                             |
+-----------+----------------------------------+

openstack role add --project demo --user demo user

为后续的服务创建统一租户service
解释：后面每搭建一个新的服务都需要在keystone中执行四种操作：1.建租户 2.建用户 3.建角色 4.做关联
后面所有的服务公用一个租户service，都是管理员角色admin，所以实际上后续的服务安装关于keysotne
的操作只剩2，4
openstack project create --domain default \
  --description "Service Project" service
 
 +-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Service Project                  |
| domain_id   | dcf404538c064ac383c291187f54d331 |
| enabled     | True                             |
| id          | 171824d4db9f4efb8a42b14d8341282d |
| is_domain   | False                            |
| name        | service                          |
| parent_id   | dcf404538c064ac383c291187f54d331 |


  
四：验证操作：
编辑：/etc/keystone/keystone-paste.ini
在[pipeline:public_api], [pipeline:admin_api], and [pipeline:api_v3] 三个地方
移走：admin_token_auth 

unset OS_TOKEN OS_URL

openstack --os-auth-url http://controller:35357/v3 \
  --os-project-domain-name default --os-user-domain-name default \
  --os-project-name admin --os-username admin token issue
Password: xianlai
+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field      | Value                                                                                                                                                                        |
+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| expires    | 2016-10-11T11:26:34.753119Z                                                                                                                                                  |
| id         | gAAAAABX_L5aXJP22cRwWhbIG--3Kh9rYI4-MMR2NTDzC3Kmo9yMk2ldO0GybcSZHk1xRCEXGP4HslrDQr3DOWCzvngVgOXuzoKI5OWXXSGI2Z-                                                              |
|            | vU3rb0LXF9iN4Icaxt6bYyVFEHod0fxMh3k71mIwzAbBIyOw9IrYZAHst3FiNX6nkOdSD9rM                                                                                                     |
| project_id | 3fd4297d0b35454caa4e156c7a1ee3fd                                                                                                                                             |
| user_id    | 42fbd360829340009528b205358135c4                                                                                                                                             |
+------------+-------------------------------------------------------------------------------------------------------------------------------------------

五：新建客户端脚本文件

管理员：admin-openrc
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=xianlai
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

普通用户demo：demo-openrc
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=xianlai
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

效果：
source admin-openrc 
[root@controller01 ~]# openstack token issue

+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field      | Value                                                                                                                                                                        |
+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| expires    | 2016-10-11T11:27:56.778593Z                                                                                                                                                  |
| id         | gAAAAABX_L6tom3THga5VCfpm_qtofrNXq0GAzqPYKSoeW4GGRDGacIembbbI0BZLJa4qtLm0HmZTF1CzP8TY4QwMwahCpwEUixn_S3WQN7H-XbVp-                                                           |
|            | 40xxhimwFYdC7mP3b2O05SBmNySUPOl7g01fsGCIIKuB0ACpCyXikWf2l9d8RjURwuT-0                                                                                                        |
| project_id | 3fd4297d0b35454caa4e156c7a1ee3fd                                                                                                                                             |
| user_id    | 42fbd360829340009528b205358135c4                                                                                                                                             |
+------------+-------------------------------------------------------------------------------------------------------------------------------------------



控制节点：
部署镜像服务
一：安装和配置服务
1.建库建用户
mysql -u root -p
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'xianlaiglance';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'xianlaiglance';
flush privileges;
  
2.keystone认证操作：
上面提到过：所有后续项目的部署都统一放到一个租户service里，然后需要为每个项目建立用户，建管理员角色，建立关联
 source admin-openrc 
 openstack user create --domain default --password-prompt glance
User Password:xianlai
Repeat User Password: xianlai
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | dcf404538c064ac383c291187f54d331 |
| enabled   | True                             |
| id        | b87f8e93674842e0b5b06b11e8e72777 |
| name      | glance                           |
+-----------+----------------------------------+


openstack role add --project service --user glance admin

建立服务实体
openstack service create --name glance \
  --description "OpenStack Image" image
  +-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Image                  |
| enabled     | True                             |
| id          | 758223bb37b047e69cbd2f787672c868 |
| name        | glance                           |
| type        | image                            |
+-------------+----------------------------------+

建端点
openstack endpoint create --region RegionOne \
  image public http://controller:9292
  +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 7610e52161c444669f0cc2ae61fb21e0 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 758223bb37b047e69cbd2f787672c868 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+


openstack endpoint create --region RegionOne \
  image internal http://controller:9292
 +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 55834aa13b5c43ceb161960b6f56bcfa |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 758223bb37b047e69cbd2f787672c868 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+
openstack endpoint create --region RegionOne \
  image admin http://controller:9292
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 1ffd0dda585049269bfa9929c6ef7f9a |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 758223bb37b047e69cbd2f787672c868 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+


3.安装软件
yum install openstack-glance -y

4.修改配置：
编辑：/etc/glance/glance-api.conf 

[database]
#这里的数据库连接配置是用来初始化生成数据库表结构,不配置无法生成数据库表结构
#glance-api不配置database对创建vm无影响，对使用metada有影响
#日志报错:ERROR glance.api.v2.metadef_namespaces
connection = mysql+pymysql://glance:xianlaiglance@controller/glance

[keystone_authtoken]
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = xianlai

[paste_deploy]
flavor = keystone

[glance_store]
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/

编辑：/etc/glance/glance-registry.conf

[database]
#这里的数据库配置是用来glance-registry检索镜像元数据
connection = mysql+pymysql://glance:xianlaiglance@controller/glance


新建目录：
mkdir /var/lib/glance/images/
chown glance. /var/lib/glance/images/

同步数据库：（此处会报一些关于future的问题，自行忽略）
su -s /bin/sh -c "glance-manage db_sync" glance

启动服务：
systemctl enable openstack-glance-api.service \
  openstack-glance-registry.service
systemctl start openstack-glance-api.service \
  openstack-glance-registry.service
  
  
二：验证操作：
. admin-openrc
wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img

openstack image create "cirros" \
  --file cirros-0.3.4-x86_64-disk.img \
  --disk-format qcow2 --container-format bare \
  --public
  
 +------------------+------------------------------------------------------+
| Field            | Value                                                |
+------------------+------------------------------------------------------+
| checksum         | ee1eca47dc88f4879d8a229cc70a07c6                     |
| container_format | bare                                                 |
| created_at       | 2016-10-11T10:49:07Z                                 |
| disk_format      | qcow2                                                |
| file             | /v2/images/232f8497-baf5-4677-8454-179314ec955e/file |
| id               | 232f8497-baf5-4677-8454-179314ec955e                 |
| min_disk         | 0                                                    |
| min_ram          | 0                                                    |
| name             | cirros                                               |
| owner            | 3fd4297d0b35454caa4e156c7a1ee3fd                     |
| protected        | False                                                |
| schema           | /v2/schemas/image                                    |
| size             | 13287936                                             |
| status           | active                                               |
| tags             |                                                      |
| updated_at       | 2016-10-11T10:49:08Z                                 |
| virtual_size     | None                                                 |
| visibility       | public                                               |
+------------------+------------------------------------------------------+


openstack image list


part4：部署compute服务

一：控制节点配置
1.建库建用户
CREATE DATABASE nova_api;
CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'xianlainova';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'xianlainova';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'controller' IDENTIFIED BY 'xianlainova';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'xianlainova';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%%' IDENTIFIED BY 'xianlainova';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'controller' IDENTIFIED BY 'xianlainova';
  
  
  
flush privileges;

2.keystone相关操作

. admin-openrc
openstack user create --domain default \
  --password-prompt nova
  User Password:xianlai 
Repeat User Password:xianlai 
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | dcf404538c064ac383c291187f54d331 |
| enabled   | True                             |
| id        | baccf94b8236434cbd96c9572b7bdaa3 |
| name      | nova                             |
+-----------+----------------------------------+

openstack role add --project service --user nova admin

openstack service create --name nova \
  --description "OpenStack Compute" compute
  
openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1/%\(tenant_id\)s
  
  +--------------+-------------------------------------------+
| Field        | Value                                     |
+--------------+-------------------------------------------+
| enabled      | True                                      |
| id           | ff801490d6a941529634c7621c0c00f0          |
| interface    | public                                    |
| region       | RegionOne                                 |
| region_id    | RegionOne                                 |
| service_id   | f0d189e198864889b83f6747d147b4b7          |
| service_name | nova                                      |
| service_type | compute                                   |
| url          | http://controller:8774/v2.1/%(tenant_id)s |
+--------------+-------------------------------------------+

openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1/%\(tenant_id\)s
  
 +--------------+-------------------------------------------+
| Field        | Value                                     |
+--------------+-------------------------------------------+
| enabled      | True                                      |
| id           | d8b9f8c43ec441dba34398002fa22ffe          |
| interface    | internal                                  |
| region       | RegionOne                                 |
| region_id    | RegionOne                                 |
| service_id   | f0d189e198864889b83f6747d147b4b7          |
| service_name | nova                                      |
| service_type | compute                                   |
| url          | http://controller:8774/v2.1/%(tenant_id)s |
+--------------+-------------------------------------------+


openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1/%\(tenant_id\)s
  +--------------+-------------------------------------------+
| Field        | Value                                     |
+--------------+-------------------------------------------+
| enabled      | True                                      |
| id           | 82602dd8dbd046f89fafb515dac42546          |
| interface    | admin                                     |
| region       | RegionOne                                 |
| region_id    | RegionOne                                 |
| service_id   | f0d189e198864889b83f6747d147b4b7          |
| service_name | nova                                      |
| service_type | compute                                   |
| url          | http://controller:8774/v2.1/%(tenant_id)s |
+--------------+-------------------------------------------+



  
3.安装软件包：
yum install openstack-nova-api openstack-nova-conductor \
  openstack-nova-console openstack-nova-novncproxy \
  openstack-nova-scheduler -y

4.修改配置：
编辑/etc/nova/nova.conf

[DEFAULT]
enabled_apis = osapi_compute,metadata
rpc_backend = rabbit
auth_strategy = keystone
my_ip = 192.168.10.11
use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver


[api_database]
connection = mysql+pymysql://nova:xianlainova@controller/nova_api

[database]
connection = mysql+pymysql://nova:xianlainova@controller/nova

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = xianlai

[keystone_authtoken]
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = xianlai


[vnc]
#下面的为管理ip
vncserver_listen = 192.168.10.11
#下面的为管理ip
vncserver_proxyclient_address = 192.168.10.11

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

5.同步数据库：（此处会报一些关于future的问题，自行忽略）
su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova

6.启动服务
systemctl enable openstack-nova-api.service \
  openstack-nova-consoleauth.service openstack-nova-scheduler.service \
  openstack-nova-conductor.service openstack-nova-novncproxy.service
systemctl restart openstack-nova-api.service \
  openstack-nova-consoleauth.service openstack-nova-scheduler.service \
  openstack-nova-conductor.service openstack-nova-novncproxy.service
  
二：计算节点配置(三台配置相同)

1.安装软件包：
yum install openstack-nova-compute libvirt-daemon-lxc -y

2.修改配置：
编辑/etc/nova/nova.conf

[DEFAULT]
rpc_backend = rabbit
auth_strategy = keystone
#计算节点管理网络ip
my_ip = 192.168.10.13(14,15)
use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = xianlai

[vnc]
enabled = True
vncserver_listen = 0.0.0.0
#计算节点管理网络ip
vncserver_proxyclient_address = 192.168.10.13(14,15)
#控制节点管理网络ip
novncproxy_base_url = http://192.168.10.11:6080/vnc_auto.html

[glance]
api_servers = http://controller:9292

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

3.如果在不支持虚拟化的机器上部署nova，请确认
egrep -c '(vmx|svm)' /proc/cpuinfo结果为0
则编辑/etc/nova/nova.conf
[libvirt]
virt_type = qemu

4.启动服务
systemctl enable libvirtd.service openstack-nova-compute.service
systemctl start libvirtd.service openstack-nova-compute.service

三：验证
控制节点
[root@controller01 ~]# source admin-openrc
[root@controller01 ~]# openstack compute service list
+----+------------------+------------+----------+---------+-------+----------------------------+
| Id | Binary           | Host       | Zone     | Status  | State | Updated At                 |
+----+------------------+------------+----------+---------+-------+----------------------------+
|  1 | nova-conductor   | controller | internal | enabled | up    | 2016-11-21T06:09:20.000000 |
|  6 | nova-scheduler   | controller | internal | enabled | up    | 2016-11-21T06:09:15.000000 |
|  7 | nova-consoleauth | controller | internal | enabled | up    | 2016-11-21T06:09:15.000000 |
| 21 | nova-compute     | compute01  | nova     | enabled | up    | 2016-11-21T06:09:16.000000 |
| 22 | nova-compute     | compute02  | nova     | enabled | up    | 2016-11-21T06:09:18.000000 |
| 23 | nova-compute     | compute03  | nova     | enabled | up    | 2016-11-21T06:09:16.000000 |
+----+------------------+------------+----------+---------+-------+----------------------------+




part5：部署网络服务

一：控制节点配置
1.建库建用户
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'xianlaineutron';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'xianlaineutron';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'controller' IDENTIFIED BY 'xianlaineutron';
flush privileges;

2.keystone相关
. admin-openrc

openstack user create --domain default --password-prompt neutron

User Password:xianlai
Repeat User Password:xianlai 
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | dcf404538c064ac383c291187f54d331 |
| enabled   | True                             |
| id        | d0728d990a3d4f70bfc01361afc99362 |
| name      | neutron                          |
+-----------+----------------------------------+

openstack role add --project service --user neutron admin
 
openstack service create --name neutron \
  --description "OpenStack Networking" network

  +-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Networking             |
| enabled     | True                             |
| id          | 906d679792c24802b7f6c3d253b54981 |
| name        | neutron                          |
| type        | network                          |
+-------------+----------------------------------+


openstack endpoint create --region RegionOne \
  network public http://controller:9696
 
 +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 7531788ecf924a50a64ede5b0e1a99dd |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 906d679792c24802b7f6c3d253b54981 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+


openstack endpoint create --region RegionOne \
  network internal http://controller:9696
  
 +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | fd6d0df8672a43b7b570032d205f4c8d |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 906d679792c24802b7f6c3d253b54981 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+


openstack endpoint create --region RegionOne \
  network admin http://controller:9696
 +--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | b6312a7e948b4f488b74443963d21ee4 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 906d679792c24802b7f6c3d253b54981 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

 
3.安装软件包
yum install openstack-neutron openstack-neutron-ml2 python-neutronclient which  -y

4.配置服务器组件 
编辑 /etc/neutron/neutron.conf文件,并完成以下动作: 
在[数据库]节中,配置数据库访问:
[DEFAULT]
core_plugin = ml2
service_plugins = router
#下面配置:启用重叠IP地址功能
allow_overlapping_ips = True
rpc_backend = rabbit
auth_strategy = keystone
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = xianlai

[database]
connection = mysql+pymysql://neutron:xianlaineutron@controller/neutron

[keystone_authtoken]
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = xianlai

[nova]
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = xianlai

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

编辑/etc/neutron/plugins/ml2/ml2_conf.ini文件 
[ml2]
type_drivers = flat,vlan,vxlan,gre
tenant_network_types = vxlan
mechanism_drivers = openvswitch,l2population
extension_drivers = port_security

[ml2_type_flat]
flat_networks = provider

[ml2_type_vxlan]
vni_ranges = 1:1000

[securitygroup]
enable_ipset = True


编辑/etc/nova/nova.conf文件：
[neutron]
url = http://controller:9696
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = xianlai 
service_metadata_proxy = True

5.创建连接

ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini

6.同步数据库：（此处会报一些关于future的问题，自行忽略）
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
 --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
 
7.重启nova服务
systemctl restart openstack-nova-api.service

8.启动neutron服务
systemctl enable neutron-server.service
systemctl start neutron-server.service



二：网络节点配置


创建eth1
TYPE=Ethernet
BOOTPROTO="static"
HWADDR=14:18:77:71:b0:6d
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eth1
UUID=a1c2da4b-6536-4846-986c-9295ea5be9b5
DEVICE=eth1
ONBOOT=yes
IPADDR=1.1.1.1
NETMASK=255.255.255.0


二层通讯 不需要网关

1. 编辑 /etc/sysctl.conf
net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0

2.执行下列命令，立即生效
sysctl -p

3.安装软件包
yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch -y

4．配置组件 
编辑/etc/neutron/neutron.conf文件
[DEFAULT]
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True
rpc_backend = rabbit
auth_strategy = keystone


[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = xianlai

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

6、编辑 /etc/neutron/plugins/ml2/openvswitch_agent.ini文件:
[ovs]
#下面ip为网络节点数据网络ip
local_ip=1.1.1.1
bridge_mappings=external:br-ex

[agent]
tunnel_types=gre,vxlan
l2_population=True
prevent_arp_spoofing=True


7.配置L3代理。编辑 /etc/neutron/l3_agent.ini文件:
[DEFAULT]
interface_driver=neutron.agent.linux.interface.OVSInterfaceDriver
external_network_bridge=br-ex

8.配置DHCP代理。编辑 /etc/neutron/dhcp_agent.ini文件:

[DEFAULT]
interface_driver=neutron.agent.linux.interface.OVSInterfaceDriver
dhcp_driver=neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata=True

9.配置元数据代理。编辑 /etc/neutron/metadata_agent.ini文件:
[DEFAULT]
nova_metadata_ip=controller
metadata_proxy_shared_secret=xianlai

10.启动服务

网路节点：
systemctl start neutron-openvswitch-agent.service neutron-l3-agent.service \
neutron-dhcp-agent.service neutron-metadata-agent.service

systemctl enable neutron-openvswitch-agent.service neutron-l3-agent.service \
neutron-dhcp-agent.service neutron-metadata-agent.service



12.建网桥
ovs-vsctl add-br br-ex
注意，如果网卡数量有限，想用网路节点的管理网络网卡作为br-ex绑定的物理网卡
#那么需要将网络节点管理网络网卡ip去掉，建立br-ex的配置文件，ip使用原管理网ip
ovs-vsctl add-br br-ex
[root@network~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
TYPE=Ethernet
BOOTPROTO="none"
HWADDR=14:18:77:71:b0:6c
NAME=eth0
DEVICE=eth0
ONBOOT=yes

[root@network ~]# cat /etc/sysconfig/network-scripts/ifcfg-br-ex 
TYPE=Ethernet
BOOTPROTO=static
HWADDR=14:18:77:71:b0:6c
NAME=br-ex
DEVICE=br-ex
ONBOOT=yes
IPADDR=192.168.10.12
GATEWAY=192.168.10.254
NETMASK=255.255.255.0
NM_CONTROLLED=no   #注意加上这一句否则网卡可能启动不成功

systemctl restart network
ovs-vsctl add-port br-ex eth0
 

 
三：计算节点配置
1. 编辑 /etc/sysctl.conf
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0
net.bridge.bridge-nf-call-iptables=1
net.bridge.bridge-nf-call-ip6tables=1

2.sysctl -p

3.yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch -y

4.编辑 /etc/neutron/neutron.conf文件

[DEFAULT]
rpc_backend = rabbit
auth_strategy = keystone


[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = xianlai

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

5．编辑 /etc/neutron/plugins/ml2/openvswitch_agent.ini
[ovs]
#下面ip为计算节点数据网络ip
local_ip = 1.1.1.2(3,4)
#bridge_mappings = vlan:br-vlan
[agent]
tunnel_types = gre,vxlan
l2_population = True
prevent_arp_spoofing = True

[securitygroup]
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
enable_security_group = True

7.编辑 /etc/nova/nova.conf

[neutron]
url = http://controller:9696
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = xianlai

8．启动服务
systemctl enable neutron-openvswitch-agent.service
systemctl start neutron-openvswitch-agent.service
systemctl restart openstack-nova-compute.service


附三台计算节点网卡配置：


[root@compute01 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=static
HWADDR=18:66:da:eb:12:b0
NAME=eth0
UUID=3490c442-1be8-4bf1-94f5-77be7983a944
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.10.13
GATEWAY=192.168.10.254
NETMASK=255.255.255.0
[root@compute01 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
TYPE=Ethernet
BOOTPROTO=static
HWADDR=18:66:da:eb:12:b1
NAME=eth1
IPADDR=1.1.1.2
NETMASK=255.255.255.0
UUID=7a46676d-d2d6-4122-8ad7-dbe38232e521
DEVICE=eth1
ONBOOT=yes


[root@compute02 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=static
HWADDR=18:66:da:ea:93:3c
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.10.14
GATEWAY=192.168.10.254
NETMASK=255.255.255.0
[root@compute02 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
TYPE=Ethernet
BOOTPROTO=static
HWADDR=18:66:da:ea:93:3d
NAME=eth1
DEVICE=eth1
IPADDR=1.1.1.3
NETMASK=255.255.255.0
ONBOOT=yes


[root@compute03 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
TYPE=Ethernet
BOOTPROTO=static
HWADDR=14:18:77:4d:95:69
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eth0
UUID=41083bed-8a33-4353-b71e-d7f53644edc4
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.10.15
NETMASK=255.255.255.0
GATEWAY=192.168.10.254
[root@compute03 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
TYPE=Ethernet
BOOTPROTO=static
HWADDR=14:18:77:4d:95:6a
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eth1
UUID=027c4acf-9911-4f74-bb09-37d5918676ed
DEVICE=eth1
ONBOOT=yes
IPADDR=1.1.1.4
NETMASK=255.255.255.0




部署控制面板dashboard
在控制节点
1.安装软件包
yum install openstack-dashboard -y

2.配置/etc/openstack-dashboard/local_settings


OPENSTACK_HOST = "controller"

ALLOWED_HOSTS = ['*', ]

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

CACHES = {
    'default': {
         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
         'LOCATION': 'controller:11211',
    }
}

OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST

OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True

OPENSTACK_API_VERSIONS = {
    "identity": 3,
    "image": 2,
    "volume": 2,
}
OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = "default"
OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"
TIME_ZONE = "UTC"

3.启动服务
systemctl enable httpd.service memcached.service
systemctl restart httpd.service memcached.service


4.验证；
http://192.168.10.11/dashboard














